<script>
  import SomeComponent from 'sfc:./some.htm';
  import emit from 'sfc:emit';
  import { dog } from 'sfc:props';

  import { each } from '../src/utils.js';

  let name = 'app_name';
  let age = 10;

  let some = {
    name: 'name',
    height: age * 50,
  };

  // 非依赖计算变量
  var weight = age * 2;

  function grow(e) {
    age ++;
    weight += 2;
    emit('grow', age);
  }

  const colors = [
    '#fee',
    '#ccd',
    '#a97',
  ];

  let selectedColor = colors[1];

  const promise = new Promise((resolve) => {
    setTimeout(resolve, 3000);
  });
</script>

<style>
  .name {
    color: #ffe;
  }

  .age {
    color: rgb(var('{{ age * 5 > 255 ? 255 : age * 5 }}'), var('{{ age * 10 > 255 ? 255 : age * 10 }}'), var('{{ age * 3 > 255 ? 255 : age * 3 }}'));
  }

  /* @fns {
    some(color, age) {
      outline: none;
      color: [[color]];
      font-size: [[age]]px;
    }
  } */

/*

  @if [[age % 5 === 0 && age > 10]] {
    .age {
      font-size: 24px;
      fns: some(red, [[age]]), some(red, age);
    }
  }
  @elseif [[age < 5]] {
    .age {
      font-size: 5px;
    }
    .height {
      color: blue;
    }
  }
  @else {
    .age {
      font-size: 12px;
    }
  } */

  @media max-width {
    .age {
      font-size: 17px;
    }
  }

  @keyframes somekey {
    0% {
      height: 100px;
    }
    100% {
      height: 0;
    }
  }

  /* @for color,index of [[colors]] {
    .age-[[index + 10]] {
      color: [[color]];
    }
  } */

  @font-face {
    font-family: "Open Sans";
    src: url("./fonts/OpenSans-Regular-webfont.woff2") format("woff2"),
      url("./fonts/OpenSans-Regular-webfont.woff") format('woff');
  }
</style>

<div class="app-{{name}}">
  <div>name: <span>{{name}}</span></div>
  <div>My Dog: {{dog.name}}</div>
  <div
    class="age"
    (class)="'age-' + age"
    (style)="age > 13 ? 'font-weight: bold;' : null"
    (if)="age > 10"
  >age: {{age}}</div>
  <div (repeat)="color,index in colors" (if)="!!color" (key)="color">
    <i>{{index}}: {{color}}</i>
  </div>
  <button @click="grow(event)">grow</button>
  <some-component
    :title="name"
    :some-attr="age % 2 === 0 ? 'odd' : 'even'"
    (if)="age > 11"
  >
    <span>passed slot: {{age}}</span>
  </some-component>

  <div (await)="promise.status(status)">
    <span (if)="status === 'pending'">Waiting ...</span>
    <span (if)="status === 'resolved'">Show async success after 3s!</span>
    <span (if)="status === 'rejected'">Show async failure after 3s!</span>
  </div>

  <input (bind)="name" />
  <textarea (bind)="name"></textarea>

  <div>
    <span>Selected color: {{selectedColor}}</span>
    <select (bind)="selectedColor">
      <option (repeat)="color in colors" (key)="color" value="{{color}}">{{color}}</option>
    </select>
  </div>
</div>
